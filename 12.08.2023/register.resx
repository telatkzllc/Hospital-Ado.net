<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>