<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxATERUQEhITFhUXGRcYGBcYFhUYGhcdIRkXGh4XGhga
        ICggGBslHRgWIjEhJSouLjAuGCAzOzMsNygtLi3/2wBDAQoKCg4NDhsQEBs1JiAlKy0yLTArMi8tLTAt
        LS0tLS0tLS0tLS0tLy83Ly0tLS4tLS0tLS0tLS0tLy0tLy0tLS3/wAARCADhAOEDAREAAhEBAxEB/8QA
        GwABAAIDAQEAAAAAAAAAAAAAAAUGAwQHAgH/xAA/EAABAwIEAwYDBgMHBQEAAAABAAIRAyEEBRIxBkFR
        EyJhcYGRMmLBI0JSobHRFBVyB0OSosLi8BZTg7LhM//EABsBAQACAwEBAAAAAAAAAAAAAAADBAECBQYH
        /8QANhEAAgEDAgMECgICAgMBAAAAAAECAwQRITEFEkETIlFhMnGBkaGxwdHh8BRCBmJS8SMzgkP/2gAM
        AwEAAhEDEQA/AOGoAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCA
        IAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCA
        IAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCAIAgCA
        ICQwWSYqq3XSoVXt/E1pIPkefotJVYReJNI1c4rdmlWpOY4tc0tcLEEEEeYOy3TzsbJ5PCAIAgCAIAgC
        AIAgCAIAgCAIAgCA+taTYICWwfDtd9yAwfNMn0En3hWoWdWWuMesjdWKJKlw5RaJqVCYN4hoG1jueY6b
        qf8AiUorM5e407WT2Rl/l2EEaaFZ/OQKgB9XFoPotuyo5woN+f7gxzT6tGnjuHxc0tfwtcGuHMkhzNXI
        gQeYIm8wDWnbTb7kXjzwbRq+JH/yPE/9s+7f3Wn8ar/xN+0j4mYcP1HayxzCGGO+eyJtcgVIsNrlROE1
        0fuMOokR+NwVSk7RUADoBs5rt/FpIWqeTaMlJZRrobBAWHg3h12Lrd61FkGob36MB6n8gCek17iuqUc9
        ehFWqqEfM7HSpta0NaAGtAAAsABYADouG228s5jbbyygf2r4SnFGttUJcw/M0AET/ST/AJvBdPh8nhx6
        F20k8NHOl0S2EAQBAEAQBAEAQBAEAQBAEAQEtlWRVKoDzDWdTub3gfurVG1nU12X7sRzqKJY8uwdBhPY
        tDnCxcTMeGqInwaPOFepU6cHimsvxey9v2IZSb9LQzvqNYJrVGz/AIW3+WTOx3n0UrcY/wDsl9Ph9zXD
        foo0sdxFRYDoOtwMACQPOY/IKCd9GLxFZNo0pPcicRxNWPwBrLf1GeZvb8lWnfVH6OhIqMVuajs0xTia
        ge/u76bNHmBb3UDuauc8xvyR2we/+oMTb7Tb5Wfna62/lVf+Q7KHgbtDiup/eU2uHLSS0j1M2UtO9lHd
        ZNHQXQkcJmeCqXeyjqIIIqN28nwJPrz9pZToV13tH7iOVOa2bNbM+HWufTGHZoa6A5znl9yR3oDZDfKf
        RV6tnUprK1RmFVpPn+31NN3CmKGIp4bTJf3g4BwbpmHOIcA5um8ggH3E0pVIwi5MkVeDi5eB1vJsrpYa
        i2jTFhcnm53Nx8T+QAHJcKrVdSXMznVJucss2MXiWU2Oq1HBrGiXE8h9T4czZaQg5vlW5rGLk8I4txTn
        r8XXNQyGC1Nv4Wzz+Y7k/sF3aNFUo8qOpTpqEcIh1MSBAEAQBAEAQBAEAQBAEAQBAT+Q5MHDtqsBm4Bt
        q+Y9G/r5b3ra2Ulzz2/fgQ1KmNFuWMS75aYG1gXCPdgHofKL9HDn5R92ft8yDb1kHmfEDQOyw4iIAeIg
        ATZrY8u9PW2xVCtd47tLRfvwJoUtcyI7C5NiK3f2DhqDnk94SRvebtI9FWpUZ1s4+JvKpGJLYbhVk9+o
        XeDRp9yZVyFhr3n7iJ1/BExSwFFhJZTY0+AnxsTKtU6FOGiXvI3OT6mxAuBsY5C8GRPkbqV04PdGuWYq
        uDpGJZTMGYLAY9xfYWWk6NNrWJlSl4kfX4fw7x3Wlni0n9HWUMrOlJd3T98yRVZLcgcfkFamC4Q9vyzP
        mW/sqFW0qU1ndE0aqka+V5lWpuAYS4EgaLnVygDkfJR0q86bymbSimtTsmRZeaVMamgPNyBB0ExLQ4b3
        AmLEhcXiN7G5qZgsJfF+Jy6kssk1zjQ5V/aBxMK7/wCHou+yYe8RtUd1/pHLrv0XZtLfs1zS3fwOjb0e
        RZe5TVcLAQBAEAQBAEAQBAEAQBAEAQEtw/lnav1O+BsE/MeTf38FatrftJZey/cEdSfKvMtbSHd90Npt
        u0GADG1Q9B0HrvEdTSXeforb7/b3lfbRbld4gzrX9nTMsIaSYIM3lu923HLcep5la7nUTjsienTxq9zY
        yXII79du+zCL+ZG4PhygypaFqkuep7Eazq9Ik7iMVTpNl7g0ch9ABc+i6EqkKce9oQKLk9CDx3FIuKTZ
        +Z30aPqfRUal/wBIL3k0aHiRbuIMSfvx5NaOvh/yFVd1Vf8AYkVKPgecJjMRVqU6Jr1Yc9rRL3Q3UYmJ
        8VFKvUSb5n7zLjFa4O24PBU6TBTY3ugRe5Pi48yeq87UuKlSXNKT95y5ScnlkNxDlTg01qDZc0EupCBr
        G5LTEh4/CLHz361hxepBqFV5XTP3JaUk+7L3lWwGbUqxhhIdEwRB8fOI5dfb0tK5hVeIvHkTSpuO5YuH
        sip9oMY5g1wdPnsXx15A+J8F57jVxDm7OG/9sfIinVeOVMs68+VyBzvO2tqfwzH/AGkS/TOprT0OwdeY
        PhIgrscMsFWTm3qvRX1ZNCm8czOecW5NSpuNWg8OZYPaRpc1xBMhsAaDBgtsDI5K64yi+WS1LdCpKSxN
        a/ArSFgIAgCAIAgCAIAgCAIAgCAyYekXuawbuIA9VtFOTSRhvCyXanhQIw7P/wA2CanVxNw2fHd3hA2K
        7CpL/wBUdlv5+X38irzf269CG4ozHU7sWOBaPiifin4T5W25+Sp3dxzPs1siWlDGrPmS5dTbTOJrjujY
        ESDsJjnewCW9GCh2tTYTk88sTNi+K5J7KlAiAXu1HqZAAG/5ATMLH86erxr8vV+7mI0Mbsr+KxL6jtb3
        Fx6n9PBVJTlJ5kyZJLYwrUyEB6Y8gggkEXBFiD1CA7FwhxSzFs0uhtdo7zdtXzt8Oo5eS4t1bOk+Zej8
        jm16PI8rYsSqEBW8y4Mw9XFNxPw31VGAQKh3BkfCZievgbm7TvZwhy9ej8CxC4lGPKWQBU223llcj85z
        A0mHRHaEHROwP4neAPuuhw/h8rqT6RW7+n7sbwjl67HF6letTxBqPntQ4udN5JuZ6zP5rrxzSksbo6mE
        1joXqi5tWlD2Nc2pTBaHEua0mYILSO8HB4iZBmYldFqndLKWGtyk+7LR7MoWa4J1Gq6mZtcEiNTTcOi8
        SCOZXMaabT6F2MuZZNRYNggCAIAgCAIAgCAIAgCAsnC2DbDsQ4E6SQ0DeYBMdTcAeav2VJYdR9NiGrL+
        viSmYYz+HoySDUdJAMkF0ifRoIieQAVutV7Gn/s/n1/BFGPPLyKzkmA7erDp0jvOPW+09Sfqubb0e1nh
        +0sTlyxyS3GeMbqbRG4h7okaSR8GnY2hwPLVHJbXNTXs1siOhquYq6qk4QBAEAQGfB4p9J7atNxa9pkE
        cv38uaxKKksMw0msM7BwnxPTxjIMNrNHfZ1+dnVvhuNuhPFubZ0nlbHOrUezeVsT6qkBr5jjqdCk6tUM
        NaJPU9AOpJst6dNzkoo2hBzlhHPcBxF/FVHF40vuQJkaeQHkIB67r2nDZQhTVJLVfEuTpci02I3izBS1
        tYDvDuui9oJmR0iJ8Qs31NNKa9pvRlrymrwpiCHOp6yHES2T3SRuI6m1xexUNlPEms4+RtWWmSR4twWu
        mK27mAA72bJtER8TifIlS3VDuueNfp+NiOjLDwU5c0tBAEAQBAEAQBAEAQBAEBecDQfTpUKZ/FLrbWc6
        D5ODRPgF2acXCEI+evxf2Ksmm5MgeKsZrq9mAIpiJ6kwT+0eCpXtTmqY8CWjHEckplgNDBOqwZPf6i5D
        W+mx9T4ATU32FDn6v9/JHN801EquKxL6jzUqOLnG5JMkrmlhJJYRiQyEAQBAEAQGxgMZUo1G1abtL2mQ
        f+bjlCxKKkuV7GGk1hnTMv8A7RMK5k1mvY8C4aNTSflMz6Hrud1yp2E+buvQoytZZ7uxTeMOJ3Yx4DQW
        UmfCwkSTze6OcWi8epm9b26orzLNGkqa8yFwGJNOo2oORE+XMeolW4TcJKS6ErWVgteK4gwsObL3BwIO
        lsSCIN3Ryt6LqTvaLi1rqVo0p5yVBry12phIgy08x0PmuTnDyi1gsb+Jqb2lj6TgDYw4GxsYsItsug75
        SjyuJAqOHnJXqtAh5Y0h8GJbJB8RaYXOLCTeyMREIYPiAIAgCAIAgCAIAgNrK6eqtTbvL2yPCbqSlHmm
        kayeIsvraRNebmGhvhLnXvsT3W+67mP/ACc3gvn/ANFNejg59WcX1CTu5x3tuefRcFtykXdkWviijSbh
        aY196QKbQZ1MAguPQSGweoIA3It3k13YR2SK1JtzfxKcqRaCAIAgCA+gE2QylkkaeQ4pwkUXesD8iVso
        suw4ZdzWVTfy+ZgrZdVY4NexzS4gDUCAfXmsNYIKltVpyUZxab8SZp8H1vvPpjyLj9FnlOvD/Hrh+lJL
        3/Yz/wDRsAk1uRsGf7k5SZ/49KMW3U28F+T7lPDNGpSZVc9/eEwC0QbjmD0RJGbHgtGvRjVlJ69Fjx9p
        J0+F8KPuuPm4/SFnCOhHgVot8v2/bBp8Q5NQp4Z72Uw1w03lxPxAcz4rDRV4pw22o2zlTjhrHV+OOpLZ
        Rh6fY0nCmwEsYSQ1ok6RJsFnB07C3ou3py5FlpdF4HmtnmFpksNQAgwQGuMEcrBMms+K2dKXLzarwT+x
        Qcxe11Wo5vwl7iPIkkLV4zoeJuJRlVnKGzbx6smssEIQBAEAQBAEAQHprCbAEnwQylnY3cFhsQ1weylU
        JFx3HEfotoycXlEqta01pBv2My5pSxYHaVtYDiBcgCYsNI2sOi2lOcnmTNqtlVoRUpwwvM08BSpuqBtR
        /ZtMy+C6LGLC5EwLdVGVm2loWzH5BRrCk2i57S2kxzqj5d2jXDu6RMN0lrxASOpc4TYVL3n7yWH9zHT4
        Nb96sT5MA+plbcp3Y/4541Ph+TSzThV9NhfTfrAuREGOovdYwVLzgVSjBzhLmS36P8njhLB0ar3tqMDo
        aCJJ6wbA33G6R1I+C21GvVlGqs4WV7y0/wAvwlO5p0W+Lg39XLOEeldpY0VmUYr1/kgOL61BzKfZupkh
        xkMLdiBcx5JI4fHKlvOMOxa0ztj6EnwvlTadNtRw+0eJn8IOwHS0E+aJHS4PYRpUlVku89fUj7jeJqFN
        5pw9xBgloET0uRKzlGa/HLelUcMN48MFe4mzdtZzOzJ0tBNxB1E/sGrVs4PFuIRupxdPOEvj+4L010gH
        rdbo9pGTlBSXVfQrbjmruTGD/wAfteStdTzs3xeaecJf/P5K5h84xDGCmyoWtEwBFpJO8TuSsZZwad/c
        U4ckJtJeB0PCVNdNj/xNa73AP1W+5763n2lGMvFL4nMsSCHuaZJBIvvYqNnzmpHlm14M6Bw3U1YWkegI
        9nEfRbrY9zwefNZw8sr3M91MpwuovdTZJJcS6bk7m5TCNpcPslJynFZeXqyh5zSa2vUa2NIcYjYDeAtX
        ueKvIQhcTjDbLwaSwVggCAIAgCAIAgLBwU+MQR1Y4fm0/RZW52uAyxd48Uy3ZlmDKLO0fqIkDugE3nqR
        0WzPVXl5C1p888tZxoVTiPPaVekKbGvBDg6XBu0OHInqFhtHmOKcUpXdNQhFrDzr6n6yuhanCOmZP2bs
        PRe17nOFNjHtcCNEAlumRJYT2lxaQfFIbtHZ/wAYm1dVYNYTWV54ePfqaPETsUOz/h9UkuDgAD0gmRAG
        +63eeh3eLSu48n8fPXONfDH1JcvAbqfEAS7ptf03WTqSko0+ap4a/UpfBrx/EuA2LHfq0/RaxPI8Bkv5
        bx1T+ha8yy2nXAbU1QDNjHKFlo9NeWVO6UVUzheBW+KMno0aTX02kHVpJlxmzjzPgsNHn+McOo21KMqa
        xrh6+RbcORpaRtA/QLZnqKWtOOPBfI5biGOD3B3xAkHzm6jPnE4uMnGW6ep4hDQ6dlb9VCkerGf+oW/Q
        +i2Mua2pv/VfIg8Zxboe5gozpJEl8XBjaFjJxK/+QOE3CMNnjV/TBTniDsR4FanlmsHSMifOGpH5APa3
        0W6Pf8MlzWlN+X4KFnLIxFUfO/8AUlaHiL2PLcVF/s/mW/g6pOGj8L3D9Hf6lutj1fAJZtceEn9H9Txm
        vDQrVnVTU0zFgydmgb6vDonKupHecE/kV5VefGfLy9ZWc/ywYeoGBxcC0OkiOZH0WrWDz3EbL+JVVNPO
        mSMWCgEAQBAEAQBAEBMcKPjFU/HUP8p+sLK3OnweWLyHt+TL3iTTDZqadIgy6IB2Bvzv+a3Pa13SUM1c
        YXjsQHEeZUTQLaVVmoEQGnkQ5rtrfC5w9Vq9jz/GLm1qW/JSkspp4XtM1HhTCwD9o7zcPoAmCzS4DbYT
        bb9q+xuYKnTpVRh6bY7j6l5lsmm2GkmSDpkj5fVY2kVKNtG04uowWIyh687t59xs4/GspND3zpLg2Ryn
        mfBbM791dRtoKc9m0vVnqYs5wTq1FzGu0k3F7O+U+B/ZGQ8QtZXVBwhLD3Xg/Ip/DgdTxjGuBBlzSD/S
        be8LVHlOF81K+gnvlplyzfD1KlJzKbtLzEGS3mJuL7Stmeuv6NWtQcKTw9OuPkVbMcgxDaTqlSsHaRMS
        93OPveBWrTPM3PCbqnRdWpPOOmW/mTPCmZNqUhSJ77BEdW8iOtrenispnX4Lexq0VRb70fivIy5hw5Qq
        vNQ62k76SIJ63BumMklzwW3r1HUbab3x4+OpG8R5RRpYb7NoBD23JlxsREnzFgj2Odxbh9C2tV2aw+Za
        9Xv+6EnkGMZ/C0i5zWwCO84DYkc/JZT0Olwy6pqzhzyS3WrXRmf+Z4VsntaQJ3ILb+yaE386xhlqcfZ+
        Cj8QV2PxFR7DLSRBvfuid/GVq9zx3EakKlzOdN5Tf0J3I8+p0qDKT2v1APM90AiXOsXET0HjZZTOtYca
        pW1vGnKLbWdseOfEgM4xjKtV1RrSJM33NgL8uR26rVnFvKyrV5VFomyUyLNjSw7qdNjn1S8mNJLQIZGx
        mTD/AGC2WXokTWnFK9onCCWHrrnOff6j1jeJcS06Zp6oOrSA4NuYh2pwdaDItdY5mWXx67lthez7kJj8
        wqViHVHaiBAs0W6WAWHqc+4uqtxLmqvL9n0NVCuEAQBAEAQBAEBu5LU04ikfnb7EgH8inUtWU+S4py/2
        XzOi4zDCpTdTcSA4QY3UmT31xQVelKnLZ+BB4vhjDspVHN1lzWOIl03AJFgBOy1wjh3HBLelRnOOW0m1
        n8Iqjsyr7drU/wAbv3WuTzTuqzWOd49bJPhnNAyppqmQ4ghznkBhAcNR691z2x808llbljh1VRvKdScs
        JZy34NEzxNmFF2Hc1tRpJLS0CTMOEwduqy2d7i99bVbdwhNN5WxoZBxI2nTNOtqOn4CBJj8Ppy/+LCZT
        4bxiNCk6dbLS2x8vsYsxzrDurU67GPD2uGqdI1NHkTflPRMkN3xG3qV4V6cWpJ65xqvjqbL+MulH3f8A
        7VnmLcv8jfSn8fwaOM4orVGOpltMNcCDAdMep3WMlG441cVoOnJJJ+C/JB06haZBII2IsR6rByE2nlHR
        MgqVTRb2jXfCCHl4drBvyuIEbrdHuuFzqyt0qqe27ec519aKbxGzTiHs1ucARGpxcRIBiT0mFqzyfEoc
        lzKHNlLxeem2vhsRawUD7KA3MpwJrVQzlu64BgbxJufBSUqfPNRNZy5VkuDcswzGz2bIFyXDVYTcly7P
        YUYrLisFXtJt7lHxLw57nNEAuJAgCATYQNvJcSTTk2i2ti7ZBRe2iwOiNMjr3iXR7Ee58F17Om4w16lW
        q02VLOawdWdADWtJa0AACBbl1Mn1XMrtObwWYbGioTYIAgCAIAgCAIAgPdKoWkOG4II8xdDMZOLTXQk3
        8SYs/wB7Hk1g+izzM6MuL3kv7/L7GxlYr4nWDiKg0xzJBmRtqHRWLeh2zazjBTr39w/Sm3nzZixWQObT
        c8P1OYSHNi4HUXM2h3kVtK0koOS6boqKqs4IzClgdNQEtg2Bgkxa/SYlVo8qepI89C3Ynh+n2JY0vLwB
        oDiQ1pmXmNRA1REX3BkQZuuzcoqUdNNVuVlVfMUtUC0EAQBAEBKUs/xLWCm2pDQIHdbIHSYlZyzoQ4pd
        QgqcZ4S9X2IxziSSTJNyTzWCg228s+IYCAuPDWW9mztHiHv2sZaIJg9JifYb2XVtKSpx55bvYrVZ5eEa
        /FWZQOwabmC/wHJvrv7LS+rf/mvaZow/sQmS4E1qzadomXTIGkXMkXFhHmQufBZkl5k05cscl0zGv2dO
        oRALGyHTFyTAjqO6Ohldmc5RhJ7fun74lOCzJZOfLiF4+IAgCAIAgCAIAgCAIAgNzKMZ2VVtS8bOA5g/
        r19FLQqdnNSNZx5lgudaoGltdpGkgB55ablr/Qn2celuvOSWKi26+r8FVLPdfsKpnuWGjUt8Drt+rfRc
        y5odlLyexZhPmRnyTPXU4p1L0+tyW+V9vBb291KniL2NalJS1W5IZxkPaO7SiWjVcibHmCIEXU9xa875
        6fX90NIVcLEitYrCvpu0vaWnxG42kdRY3C50ouLwydNPYwrUyEAQBAEB9QFgy3JGsaa2Klob9wyP8Q33
        5bq7Qt48vaVNunmQyqPPLEz47ioGRSpkWs5xvMc2iRYzHpKy76WuF+DWNH/kytvc57pMuc4+ZJP6qk22
        8ssaJF44eyvsKRNQEVS4gt7pDYAi8S1w1Plsn7swr1hHLcl0/wCynVqOTxHYguK8Y7tOyDwW6Wuc1pka
        iJgkbkAieUhQ17l1Xpt+6k1GOmSAVYmCAIAgCAIAgCAIAgCAIAgLHw9nH9xWdLSIYXGYtGi/3Y2H7q9a
        V0v/ABy2ZBUp/wBok3Vw7SDRqCaZ+Ek/D8pJ2M/CfTfe9KEcck9un2+3uIub+y3KlnGVOou6sPwu+h6F
        cu4oSpS8izCakjd4dzptMinVns5JkSS220XtPTaSb7LNK6nTjhGlWnzLK3Jqh2Fdoc5g+0AkWPwl/eOk
        6hcuAc6DEcoV2k6NbVrV7ojfNDboaOI4XZfRULSfhBuPcXHPry6qKpZJbP6m8ar8CIxWRYhgadIdqmzC
        HlsRZ4bOkmbTuqTo1E8crJI1Is02YKqTApvJOwDXEnblHiPda8r8DZyS3Pf8tryW9lUkWI0OkHobWWY0
        5S2Q5l4khgeHKz7vimPG7vRv7kKxTs6kt9COVWKJvB4XCYcuOtmtoLpc5pfaBpaLd4ztub3gWsRdCgs5
        yyKUpzxhFfzzNzXdABDA5xbPxXj4otytG0m53VGpWnUeZMmhBRRFKIkLZwVlwBGMqU9TGPAbMQTBnS2Z
        LgSy/wAIuTcAHMYOo+SO5VuJ5XZp6tfuf3Jm4ozoNL6bGgOeXFwEw3X3jE3JMzPiuhWnGjDsob9TFClo
        m+hTVzi2EAQBAEAQBAEAQBAEAQBAEAQFvybOGVWilUADog6nE9oST+Lntad9rWHStLjm7lT4/IrVKbT5
        kSVVsAtqAOp9TeBH355Aj4veIk25ad2azHx+/wBzRa6rcr2b5AR9pRGppvpFyP6eo/NUK1pjvU9UTQq9
        JbkEx7mmWkgjmDBHqqWWmTExheJa7RpcGPG0uBneZkEX5XlT/wAqtp3tv3UilRiyWw3FdAkCpSe0CZLC
        Hk94w0BxaB3dMu6g2vaRX1bOdP32kToS6P8AfiZcZxXhgHGiyqTbs9RDdJ7t3kEyZ1fDGw6rV3lV6PGD
        EaE9OZ+s0sTxZ32OZSBbpGtry67r6tLmukDaJ9uSO8rNYTx6kbK30abI7M+IKtR3cJpt06dLXbgmTqIA
        k3jbaB1mGVWpP0pNksaUUiHUZIZKFB73BjGuc42DWgknyA3Qw2ksssWTcPVGVmvr02FjYJYajCXSJaYa
        Ta4N7EddlvTpSqvEV9iGdVOPdZKZ3nOHpNikGNe0aWU2gEMFpc53WRMbk3PJWudWz5Yavq/Mip05N97Z
        /uxRnOJMkyTcnqqbeS4fFgBAEAQBAEAQBAEAQBAEAQBAEAQE7lPELmQyrLmTE7uaP9XkfdXKV5OCw9UR
        TpJ6rcn8FVpPBNBwB3IAMDfdlonqI5XV2lKE+9TeH4dPd9iGSa9IYjBU6tqtGD+Jt5Pg4DV7iFmdKE/T
        j7V+/NBScdmQ2J4WNzSqAjo6x8pFifZVZWDfoPJIqy6kbWyTEtuaZP8ASQ78hdV5WtWO8SRVIvqR7mkG
        CIIVdrBufEBtYDL61Z2mlTe88w1pMeJjYeJWMmspxj6TN7C8O131HUzpbpnU9xlkjdocwHWZt3Z9rqWF
        Kc/RWTV1YpZJ1mU0MM4Vm1X6Wshxc1vecZDoEHukd3Tub3vCtws1GPNWePJfchVSc1hois14lc+RSBbq
        JLnH4iTcm236rWpd93lprCJIUUtyvqkTBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQHqm8tMgkHqDCynjVAs
        OA4ncBFVpceThAPkREev6q/SvpLSevmQSop7EpUzTCVDo7XeIPfYQYH3oEdN4splc0ase9o/3qjRQmtQ
        7EtJ7uMAHQiiTNuZEkeCzmLfdq/IYfWJgxlChVJbUrUS8ta0OADXAh0yYdpJLe6QRblFwYJ0Yzn3qi9y
        NoyklojWbl2DokOfXkiCIIPOQYaCSsOhbx9KXuM805bI3H55hWAlr6ry4lzrvIJPPS+ADYX8uizTq21N
        5ijXs5vcjMXxQ8yKbA0cibnneNultvNa1L6UvRWEbxopbkNisU+o4veZJ52/QWCqTnKbzJ6kqSSwjAtD
        IQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAE
        AQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAE
        AQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAE
        AQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQH/9k=
</value>
  </data>
</root>